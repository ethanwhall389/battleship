(()=>{var t={227:t=>{t.exports=class{static updateDisplay(t,e){const s=document.querySelector(".player-board"),a=document.querySelector(".enemy-board");s.textContent="",a.textContent="",this.displayPlayerBoard(t,s),this.displayOpponentBoard(e,a)}static hideHomeScreen(){document.querySelector(".home-screen").style.display="none"}static showPlaceShipsScreen(t,e){document.querySelector(".place-ships-cont").style.display="flex";const s=document.querySelector(".place-ships-board");this.displayPlayerBoard(t,s),document.querySelector(".place-ships-cont > h1").textContent=`Place your ships, ${e}`}static updatePlaceShipsBoard(t){const e=document.querySelector(".place-ships-board");e.textContent="",this.displayPlayerBoard(t,e)}static disableShipSelection(t){t.classList.add("disabled-selection")}static disableInput(){document.body.classList.add("user-disabled")}static enableInput(){document.body.classList.remove("user-disabled")}static hidePlaceShips(){document.querySelector(".place-ships-cont").style.display="none"}static showGame(){document.querySelector(".game").style.display="block"}static displayPlayerNames(t,e){const s=document.querySelector(".player-one-name"),a=document.querySelector(".player-two-name");s.textContent=t.name,a.textContent=e.name}static displayPlayerBoard(t,e){for(let s=0;s<t.board.length;s++)for(let a=0;a<t.board[s].length;a++){const i=document.createElement("div");i.classList.add("board-cell"),i.setAttribute("data-coordinate",`[${s}, ${a}]`),i.style.width=e.clientWidth/t.width+"px",i.style.height=e.clientHeight/t.height+"px",this.checkShip(i,t.board[s][a]),this.checkMiss(i,t.board[s][a]),this.checkHit(i,t.board[s][a]),this.checkSunk(i,t.board[s][a]),e.appendChild(i)}}static displayOpponentBoard(t,e){for(let s=0;s<t.board.length;s++)for(let a=0;a<t.board[s].length;a++){const i=document.createElement("div");i.classList.add("board-cell"),i.setAttribute("data-coordinate",`[${s}, ${a}]`),i.style.width=e.clientWidth/t.width+"px",i.style.height=e.clientHeight/t.height+"px",this.checkMiss(i,t.board[s][a]),this.checkHit(i,t.board[s][a]),this.checkSunk(i,t.board[s][a]),e.appendChild(i)}}static displayAllShips(t,e){const s=document.querySelector(".player-board"),a=document.querySelector(".enemy-board");s.textContent="",a.textContent="",this.displayPlayerBoard(t,s),this.displayPlayerBoard(e,a)}static checkShip(t,e){!1!==e.ship&&t.classList.add("ship-exists")}static checkMiss(t,e){!0===e.isCellMissed&&t.classList.add("cell-miss")}static checkHit(t,e){!0===e.isCellHit&&t.classList.add("cell-hit")}static checkSunk(t,e){e.ship.sunk&&t.classList.add("ship-sunk")}static showCoordinate(t){const e=t.target,s=JSON.parse(t.target.getAttribute("data-coordinate")),a=`${s[0]},${s[1]}`;e.textContent=a}static removeCoordinate(t){t.target.textContent=""}static showPlacementHover(t){t&&t.classList.add("placement-hover")}static removePlacementHover(t){t&&t.classList.remove("placement-hover")}static updateGameMessage(t){const e=document.createElement("p");e.classList.add("game-message");const s=document.querySelector(".message-cont");e.textContent=t,s.textContent="",s.appendChild(e)}static attackResponseMessage(t){const e=document.createElement("p"),s=document.querySelector(".message-cont");t.isCellMissed?e.textContent="Miss!":t.isCellHit&&t.ship.sunk?e.textContent=`${t.ship.name} hit and sunk!`:t.isCellHit&&(e.textContent="Hit!"),s.appendChild(e)}static displayTakeShot(t){const e=document.createElement("p"),s=document.querySelector(".message-cont");e.textContent=`${t.name} Shoots...`,s.appendChild(e)}static displayWinner(t){const e=document.createElement("p"),s=document.querySelector(".message-cont");e.textContent=`${t.name} wins!`,s.appendChild(e)}static clearGameMessages(){document.querySelector(".message-cont").textContent=""}static placeShipsMessage(t){const e=document.querySelector(".placement-message-cont > .message");e.textContent=t,setTimeout((()=>{e.textContent=""}),4e3)}}},866:(t,e,s)=>{const a=s(227);t.exports=class{static startGame(){const t=document.querySelector("#submit"),e=document.querySelector("#name");return new Promise((s=>{t.addEventListener("click",(t=>{a.hideHomeScreen(),t.preventDefault(),s(e.value)}))}))}static completePlacing(t){return new Promise((e=>{document.querySelector(".complete-placing").addEventListener("click",(()=>{t.allShipsPlaced()?e():a.placeShipsMessage("Please place all ships before proceeding.")}))}))}static inputAttack(t,e){return new Promise((s=>{document.addEventListener("click",(a=>{if(a.target.classList.contains("board-cell")){const i=JSON.parse(a.target.getAttribute("data-coordinate"));t.attack(i[0],i[1],e),s(e.board[i[0]][i[1]])}}))}))}static hoverCoordinates(){document.querySelectorAll(".board-cont").forEach((t=>{t.addEventListener("mouseover",(t=>{t.target.classList.contains("board-cell")&&a.showCoordinate(t)})),t.addEventListener("mouseout",(t=>{t.target.classList.contains("board-cell")&&a.removeCoordinate(t)}))}))}static selectedShip={length:0,selectedShipElem:null,orientation:"x",name:null};static selectShip(){const t=document.querySelectorAll(".ship");this.addHoverEvents(),this.changeOrientation(),t.forEach((e=>{e.addEventListener("click",(s=>{t.forEach((t=>{t.classList.remove("ship-selected")})),e.classList.add("ship-selected");const a=s.target.parentNode,i=a.getAttribute("data");this.selectedShip.length=this.calcShipLength(i),this.selectedShip.selectedShipElem=a,this.selectedShip.name=a.getAttribute("data")}))}))}static changeOrientation(){document.querySelector(".orientation-bttn").addEventListener("click",(t=>{t.target.classList.contains("orientation-bttn")&&("x"===t.target.getAttribute("data-axis")?(t.target.setAttribute("data-axis","y"),t.target.textContent="Place on Y axis",this.selectedShip.orientation="y"):(t.target.setAttribute("data-axis","x"),t.target.textContent="Place on X axis",this.selectedShip.orientation="x"))}))}static calcShipLength(t){let e=0;return"carrier"===t?e=5:"battleship"===t?e=4:"cruiser"===t||"submarine"===t?e=3:"destroyer"===t&&(e=2),e}static addHoverEvents(){const t=document.querySelector(".placement-board-cont");t.addEventListener("mouseover",(t=>this.mouseOverHandler(t))),t.addEventListener("mouseout",(t=>this.mouseOutHandler(t)))}static mouseOverHandler=t=>{const e=this.selectedShip.length;if(t.target.classList.contains("board-cell")){const s=JSON.parse(t.target.getAttribute("data-coordinate"));for(let t=0;t<e;t++)if("x"===this.selectedShip.orientation){const e=document.querySelector(`[data-coordinate='[${s[0]}, ${s[1]+t}]']`);a.showPlacementHover(e)}else if("y"===this.selectedShip.orientation){const e=document.querySelector(`[data-coordinate='[${s[0]+t}, ${s[1]}]']`);a.showPlacementHover(e)}}};static mouseOutHandler=t=>{const e=this.selectedShip.length;if(t.target.classList.contains("board-cell")){const s=JSON.parse(t.target.getAttribute("data-coordinate"));for(let t=0;t<e;t++)if("x"===this.selectedShip.orientation){const e=document.querySelector(`[data-coordinate='[${s[0]}, ${s[1]+t}]']`);a.removePlacementHover(e)}else if("y"===this.selectedShip.orientation){const e=document.querySelector(`[data-coordinate='[${s[0]+t}, ${s[1]}]']`);a.removePlacementHover(e)}}};static placeShip(t){document.querySelector(".placement-board-cont").addEventListener("click",(e=>{if(e.target.classList.contains("board-cell")&&0!==this.selectedShip.length){const s=JSON.parse(e.target.getAttribute("data-coordinate")),i=s[0],n=s[1];!0===t.placeShip(n,i,this.selectedShip.length,this.selectedShip.orientation,this.selectedShip.name)&&(a.updatePlaceShipsBoard(t),a.disableShipSelection(this.selectedShip.selectedShipElem),this.selectedShip.length=0)}}))}}},385:(t,e,s)=>{const a=s(152);t.exports=class{constructor(t,e){this.width=t,this.height=e,this.board=this.createBoard(),this.shipsNum=0,this.hits=[]}createBoard(){let t=[];for(let e=0;e<this.height;e++)t.push([]);for(let e=0;e<t.length;e++)for(let s=0;s<this.width;s++)t[e].push({isCellHit:!1,isCellMissed:!1,ship:!1});return t}placeShip(t,e,s,i,n){const o=new a(n,s,i);if("x"===i){if(t+s-1>this.width-1)return!1;if(this.checkXOverlap(e,t,s))return!1;for(let a=0;a<s;a++)this.board[e][t+a].ship=o;return this.shipsNum++,!0}if("y"===i){if(e+s-1>this.height-1)return!1;if(this.checkYOverlap(e,t,s))return!1;for(let a=0;a<s;a++)this.board[e+a][t].ship=o;return this.shipsNum++,!0}}hasShip(t,e){return!1!==this.board[t][e].ship}receiveAttack(t,e){const s=this.board[t][e];this.hasShip(t,e)?!1===s.isCellHit&&(s.isCellHit=!0,s.ship.hit(t,e),this.hits.push([t,e])):!1===s.isCellMissed&&(s.isCellMissed=!0)}allShipsSunk(){for(let t=0;t<this.board.length;t++)for(let e=0;e<this.board[t].length;e++){const s=this.board[t][e];if(this.hasShip(t,e)&&!1===s.ship.sunk)return!1}return!0}hasUnsunkHit(t){return!0===t.hit&&!1===t.sunk}checkXOverlap(t,e,s){for(let a=0;a<s;a++)if(!1!==this.board[t][e+a].ship)return!0;return!1}checkYOverlap(t,e,s){for(let a=0;a<s;a++)if(!1!==this.board[t+a][e].ship)return!0;return!1}allShipsPlaced(){return 5===this.shipsNum}}},483:(t,e,s)=>{const a=s(227),i=s(866);t.exports=class{static userPlaceShips(t,e){return new Promise((async s=>{a.showPlaceShipsScreen(t,e),i.hoverCoordinates(),i.selectShip(),i.placeShip(t),await i.completePlacing(t),a.hidePlaceShips(),s()}))}static randomPlaceShips(t){const e=["y","x"];let s=[5,4,3,3,2],a=["carrier","battleship","cruiser","submarine","destroyer"];for(;s.length>=1;){const i=Math.floor(9*Math.random())+1,n=Math.floor(9*Math.random())+1,o=Math.round(Math.random());!0===t.placeShip(i,n,s[0],e[o],a[0])&&(s.shift(),a.shift())}}}},469:(t,e,s)=>{const a=s(224);t.exports=class{constructor(t){this.name=t}attack(t,e,s){s.receiveAttack(t,e)}computerAttack(t){return new Promise((e=>{const s=a.attemptSmartAttack(t);if(null!==s)return void e(s);const i=this.randomAttack(t);null===i||e(i)}))}randomAttack(t){const e=Math.floor(10*Math.random()),s=Math.floor(10*Math.random());return a.canBeAttacked(t,s,e)?(this.attack(s,e,t),t.board[s][e]):this.randomAttack(t)}}},152:t=>{t.exports=class{constructor(t,e,s){this.name=t,this.length=e,this.hits=0,this.sunk=!1,this.axis=s}hit(){this.hits++,this.isSunk()}isSunk(){return this.hits<this.length?(this.sunk=!1,!1):(this.sunk=!0,!0)}getHitNum(){return this.hits.length}}},224:t=>{t.exports=class{static attack(t,e,s){s.receiveAttack(t,e)}static attemptSmartAttack(t){if(0===t.hits.length)return null;let e=t.hits[t.hits.length-1][0],s=t.hits[t.hits.length-1][1];const a=t.board[e][s];return a.ship.isSunk()?null:a.ship.hits>1?this.attackAdjacentCell(t,e,s):this.attackRandomSide(t,e,s)}static attackAdjacentCell(t,e,s){const a=["+","-"][Math.floor(2*Math.random())],i=t.board[e][s].ship.axis;let n=s,o=e;return"x"===i?n="+"===a?s+1:s-1:"y"===i&&(o="+"===a?e+1:e-1),this.canBeAttacked(t,o,n)?(this.attack(o,n,t),t.board[o][n]):(this.checkAdjacentAttackable(t,e,s)||t.hits.pop(),this.attemptSmartAttack(t))}static attackRandomSide(t,e,s){const a=["x","y"][Math.floor(2*Math.random())],i=["+","-"][Math.floor(2*Math.random())];let n=e,o=s;return"x"===a?n="+"===i?e+1:e-1:"y"===a&&(o="+"===i?s+1:s-1),this.canBeAttacked(t,n,o)?(this.attack(n,o,t),t.board[n][o]):this.attemptSmartAttack(t)}static canBeAttacked(t,e,s){const a=t.board[e][s];return!a.isCellMissed&&!a.isCellHit}static checkAdjacentAttackable(t,e,s){if("y"===t.board[e][s].ship.axis){if(this.canBeAttacked(t,e+1,s))return!0;if(this.canBeAttacked(t,e-1,s))return!0}else{if(this.canBeAttacked(t,e,s+1))return!0;if(this.canBeAttacked(t,e,s-1))return!0}return!1}}}},e={};function s(a){var i=e[a];if(void 0!==i)return i.exports;var n=e[a]={exports:{}};return t[a](n,n.exports,s),n.exports}(()=>{const t=s(469),e=s(385),a=s(227),i=s(866),n=s(483);class o{constructor(s,a,i){this.dimensions=i,this.playerOne=new t(s),this.playerTwo=new t(a),this.pOneBoard=new e(this.dimensions,this.dimensions),this.pTwoBoard=new e(this.dimensions,this.dimensions)}static async startGame(){const t=await i.startGame(),e=new o(t,"Computer",10);await n.userPlaceShips(e.pOneBoard,e.playerOne.name),n.randomPlaceShips(e.pTwoBoard),a.showGame(),a.displayPlayerNames(e.playerOne,e.playerTwo),a.updateDisplay(e.pOneBoard,e.pTwoBoard),i.hoverCoordinates(),e.gameLoop()}async gameLoop(){await this.pOneTurn(),this.pTwoBoard.allShipsSunk()?this.endGame(this.playerOne):(await this.pTwoTurn(),this.pOneBoard.allShipsSunk()?this.endGame(this.playerTwo):this.gameLoop())}pOneTurn(){return new Promise((async t=>{a.enableInput(),a.updateGameMessage(`${this.playerOne.name}'s turn!`);const e=await i.inputAttack(this.playerOne,this.pTwoBoard);a.displayTakeShot(this.playerOne),setTimeout((()=>{a.attackResponseMessage(e),a.updateDisplay(this.pOneBoard,this.pTwoBoard),setTimeout((()=>{t()}),1500)}),1e3)}))}pTwoTurn(){return new Promise((async t=>{a.updateGameMessage(`${this.playerTwo.name}'s turn!`),a.disableInput();const e=await this.playerTwo.computerAttack(this.pOneBoard);setTimeout((()=>{a.displayTakeShot(this.playerTwo)}),1e3),setTimeout((()=>{a.attackResponseMessage(e),a.updateDisplay(this.pOneBoard,this.pTwoBoard),setTimeout((()=>{t()}),1500)}),2e3)}))}endGame(t){a.clearGameMessages(),a.displayWinner(t),a.displayAllShips(this.pOneBoard,this.pTwoBoard)}}o.startGame()})()})();